{\rtf1\ansi \deff1{\fonttbl{\f1\fmodern\fprq1\fcharset0 Consolas;}}{\colortbl;\red255\green255\blue255;\red51\green00\blue102;\red24\green97\blue167;\red50\green186\blue06;\red00\green102\blue51;\red00\green102\blue51;\red166\green23\blue97;\red83\green116\blue176;\red102\green51\blue00;\red154\green154\blue154;\red85\green85\blue85;\red166\green23\blue97;\red255\green00\blue00;\red255\green00\blue00;\red255\green48\blue48;\red244\green140\blue35;\red209\green28\blue237;\red221\green130\blue13;\red119\green106\blue184;}
\paperw12240\paperh15840\margl1134\margr1134\margt1134\margb1134\sectd\plain\f1\fs20
\pard \cbpat1{{\cf2{}}{\cf6{/****************************************************************************}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ Description}}}\par\pard
\cbpat1{{\cf6{ This is a DC Motor Service set up to work with the Lego NXT gear motor with }}}\par\pard
\cbpat1{{\cf6{ encoder. The encoder has {3}{6}{0} counts per revolution.}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{}}}\par\pard
\cbpat1{{\cf6{ ****************************************************************************/}}{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#ifndef DCMotorService_H}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#define DCMotorService_H}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// Event Definitions}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"ES_Configure.h"}}{\cf8{}} {\cf6{/* gets us event definitions */}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#include}} {\cf9{"ES_Types.h"}}{\cf8{}}     {\cf6{/* gets bool type for returns */}}{\cf8{}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// typedefs for the states}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// State definitions for use with the query function}}}\par\pard
\cbpat1{{\cf2{}}{\cf17{typedef}} {\cf2{}}{\cf16{enum}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\{}}}\par\pard
\cbpat1{{\cf2{  Init}}}\par\pard
\cbpat1{{\cf2{}}{\cf11{\}}} {\cf2{TemplateState_t}}{\cf11{;}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{// Public Function Prototypes}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf16{bool}} {\cf2{}}{\cf17{InitDCMotorService}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf16{uint{8}_t}} {\cf2{Priority}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf16{bool}} {\cf2{}}{\cf17{PostDCMotorService}}{\cf2{}}{\cf11{(}}{\cf2{ES_Event_t ThisEvent}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{ES_Event_t}} {\cf17{RunDCMotorService}}{\cf2{}}{\cf11{(}}{\cf2{ES_Event_t ThisEvent}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{//Function to convert encoder counts to angle}}}\par\pard
\cbpat1{{\cf2{}}{\cf16{uint{1}{6}_t}} {\cf2{}}{\cf17{GetAngleDeg}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf16{void}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf5{//Event Checkers}}}\par\pard
\cbpat1{{\cf2{}}{\cf16{bool}} {\cf2{}}{\cf17{CheckEncoderEvents}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf16{void}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}{\cf16{bool}} {\cf2{}}{\cf17{CheckCountLimits}}{\cf2{}}{\cf11{(}}{\cf2{}}{\cf16{void}}{\cf2{}}{\cf11{);}}}\par\pard
\cbpat1{{\cf2{}}}\par\pard
\cbpat1{{\cf2{}}{\cf8{#endif}} {\cf6{/* DCMotorService_H */}}{\cf8{}}{\cf2{}}}\par\pard
\cbpat1{}}
